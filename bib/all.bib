@inproceedings{Abate2009,
author = {Abate, Pietro and Cosmo, Roberto Di and Boender, Jaap and Zacchiroli, Stefano},
booktitle = {Proc. Third Int. Symp. Empir. Softw. Eng. Meas. {\{}ESEM{\}} 2009, Oct. 15-16, 2009, Lake Buena Vista, Florida, {\{}USA{\}}},
doi = {10.1145/1671248.1671258},
mendeley-groups = {thesis},
pages = {89--99},
title = {{Strong dependencies between software components}},
year = {2009}
}
@article{Atkinson1999337,
author = {Atkinson, Roger},
doi = {10.1016/S0263-7863(98)00069-6},
issn = {0263-7863},
journal = {Int. J. Proj. Manag.},
mendeley-groups = {Damjan,thesis},
number = {6},
pages = {337--342},
title = {{Project management: cost, time and quality, two best guesses and a phenomenon, its time to accept other success criteria}},
volume = {17},
year = {1999}
}
@article{baier2014bridging,
author = {Baier, Thomas and Mendling, Jan and Weske, Mathias},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Baier, Mendling, Weske - 2014.pdf:pdf},
journal = {Inf. Syst.},
mendeley-groups = {thesis},
pages = {123--139},
publisher = {Elsevier},
title = {{Bridging abstraction layers in process mining}},
volume = {46},
year = {2014}
}
@inproceedings{Bala2015,
author = {Bala, Saimir and Cabanillas, Cristina and Mendling, Jan and Rogge-Solti, Andreas and Polleres, Axel},
booktitle = {Bus. Process Manag. - 13th Int. Conf. {\{}BPM{\}} 2015, Innsbruck, Austria, August 31 - Sept. 3, 2015, Proc.},
doi = {10.1007/978-3-319-23063-4_28},
mendeley-groups = {thesis},
pages = {425--440},
title = {{Mining Project-Oriented Business Processes}},
year = {2015}
}
@article{bani2016software,
author = {Bani-Salameh, Hani and Ahmad, Ayat},
journal = {ICSEA 2016},
mendeley-groups = {thesis},
pages = {209},
title = {{Software Evolution Visualization Tools Functional Requirements: a Comprehensive Understanding}},
year = {2016}
}
@article{Bani2016,
address = {Los Alamitos, CA, USA},
author = {Bani-Salameh, Hani and Ahmad, Ayat and Aljammal, Ashraf},
doi = {doi.ieeecomputersociety.org/10.1109/CSIT.2016.7549475},
journal = {2016 7th Int. Conf. Comput. Sci. Inf. Technol.},
mendeley-groups = {thesis},
pages = {1--6},
publisher = {IEEE Computer Society},
title = {{Software evolution visualization techniques and methods - a systematic review}},
volume = {00},
year = {2016}
}
@article{Bender2000,
abstract = {We present a very simple algorithm for the Least Common Ancestor problem. We thus dispel the frequently held notion that an optimal LCA computation is unwieldy and unimplementable. Interestingly, this algorithm is a sequentialization of a previously known PRAM algorithm of Berkman, Breslauer, Galil, Schieber, and Vishkin [1].},
author = {Bender, Michael a. and Farach-Colton, Mart{\'{i}}n},
doi = {10.1007/10719839_9},
isbn = {3540673067},
issn = {03029743},
journal = {Resumos},
keywords = {cartesian,data structures,lca,least common ancestor,range minimum query,rmq},
mendeley-groups = {thesis},
pages = {88--94},
title = {{The LCA problem revisited (Presentation)}},
volume = {1776 LNCS},
year = {2000}
}
@incollection{Berkhin2006ClusteringSurvey,
author = {Berkhin, P},
booktitle = {Group. Multidimens. Data},
doi = {10.1007/3-540-28349-8_2},
editor = {Kogan, Jacob and Nicholas, Charles and Teboulle, Marc},
isbn = {978-3-540-28348-5},
mendeley-groups = {Research proposal,thesis},
pages = {25--71},
publisher = {Springer Berlin Heidelberg},
title = {{A Survey of Clustering Data Mining Techniques}},
url = {http://dx.doi.org/10.1007/3-540-28349-8{\_}2},
year = {2006}
}
@inproceedings{Bird2009,
abstract = {We are now witnessing the rapid growth of decentralized source code management (DSCM) systems, in which every developer has her own repository. DSCMs facilitate a style of collaboration in which work output can flow sideways (and privately) between collaborators, rather than always up and down (and publicly) via a central repository. Decentralization comes with both the promise of new data and the peril of its misinterpretation. We focus on git, a very popular DSCM used in high-profile projects. Decentralization, and other features of git, such as automatically recorded contributor attribution, lead to richer content histories, giving rise to new questions such as ldquoHow do contributions flow between developers to the official project repository?rdquo However, there are pitfalls. Commits may be reordered, deleted, or edited as they move between repositories. The semantics of terms common to SCMs and DSCMs sometimes differ markedly, potentially creating confusion. For example, a commit is immediately visible to all developers in centralized SCMs, but not in DSCMs. Our goal is to help researchers interested in DSCMs avoid these and other perils when mining and analyzing git data.},
archivePrefix = {arXiv},
arxivId = {arXiv:1402.3873v2},
author = {Bird, Christian and Rigby, Peter C. and Barr, Earl T. and Hamilton, David J. and German, Daniel M. and Devanbu, Prem},
booktitle = {Min. Softw. Repos. 2009. MSR'09. 6th IEEE Int. Work. Conf.},
doi = {10.1109/MSR.2009.5069475},
eprint = {arXiv:1402.3873v2},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Bird et al. - 2009.pdf:pdf},
isbn = {9781424434930},
issn = {15737616},
keywords = {code reviews,git,github,mining software repositories},
mendeley-groups = {thesis},
organization = {IEEE},
pages = {1--10},
pmid = {14571374},
title = {{The promises and perils of mining git}},
year = {2009}
}
@inproceedings{Buijs2014,
abstract = {Organizations realize that benefits can be achieved by closely working together on the design of their business processes. But even when there is a joint design for a particular business process, the way individual organizations carry out that process may differ - either wittingly or unwittingly. This paper proposes an analytical approach that helps to compare how different organizations execute essentially the same process. This comparison is based on the alignment of recorded process behavior with explicitly defined process models. The distinctive feature of the proposed approach is that it supports the comparison of the actual execution of a process within a particular organization with its intended design, as well as with the variants of that design by other organizations. In this way, organizations can develop a better understanding of how they can work together and further standardize a process of common interest. We include an industrial case study from the context of the CoSeLoG project to demonstrate the value of this comparison approach. {\textcopyright} Springer-Verlag Berlin Heidelberg 2014.},
author = {Buijs, J.C.A.M. and Reijers, H.A.},
booktitle = {Lect. Notes Bus. Inf. Process.},
doi = {10.1007/978-3-662-43745-2},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Buijs, Reijers - 2014.pdf:pdf},
isbn = {9783662437445},
issn = {18651348},
mendeley-groups = {thesis},
pages = {154--168},
title = {{Comparing business process variants using models and event logs}},
volume = {175 LNBIP},
year = {2014}
}
@inproceedings{DBLP:conf/quatic/CaldeiraA16,
author = {Caldeira, Jo{\~{a}}o and e Abreu, Fernando Brito},
booktitle = {10th Int. Conf. Qual. Inf. Commun. Technol. {\{}QUATIC{\}} 2016, Lisbon, Port. Sept. 6-9, 2016},
doi = {10.1109/QUATIC.2016.061},
mendeley-groups = {thesis},
pages = {254--259},
title = {{Software Development Process Mining: Discovery, Conformance Checking and Enhancement}},
year = {2016}
}
@inproceedings{Canfora2006,
author = {Canfora, Gerardo and Cerulo, Luigi},
booktitle = {SAC},
mendeley-groups = {thesis},
pages = {1767--1772},
publisher = {ACM},
title = {{Supporting change request assignment in open source development}},
year = {2006}
}
@article{Chen2016,
abstract = {Researchers in software engineering have attempted to improve software devel- opment by mining and analyzing software repositories. Since the majority of the software engineering data is unstructured, researchers have applied Information Retrieval (IR) tech- niques to help software development. The recent advances of IR, especially statistical topic models, have helped make sense of unstructured data in software repositories even more. However, even though there are hundreds of studies on applying topic models to software repositories, there is no study that shows how the models are used in the software engineer- ing research community, and which software engineering tasks are being supported through topic models. Moreover, since the performance of these topic models is directly related to the model parameters and usage, knowing how researchers use the topic models may also help future studies make optimal use of such models. Thus, we surveyed 167 articles from the software engineering literature that make use of topic models.We find that i) most stud- ies centre around a limited number of software engineering tasks; ii) most studies use only basic topic models; iii) and researchers usually treat topic models as black boxes without fully exploring their underlying assumptions and parameter values. Our paper provides a starting point for new researchers who are interested in using topic models, and may help new researchers and practitioners determine how to best apply topic models to a particular software engineering task.},
author = {Chen, Tse-hsun and Thomas, Stephen W and Hassan, Ahmed E},
doi = {10.1007/s10664-015-9402-8},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Chen, Thomas, Hassan - 2016.pdf:pdf},
isbn = {1066401594028},
issn = {1382-3256},
journal = {Empir. Softw. Eng.},
keywords = {1 introduction and motivation,Topic modeling,LDA,LSI,Survey,lda,lsi,survey,topic modeling},
mendeley-groups = {thesis},
pages = {1843--1919},
title = {{A survey on the use of topic models when mining software repositories}},
url = {http://dx.doi.org/10.1007/s10664-015-9402-8},
year = {2016}
}
@inproceedings{dambros_flexible_2008,
author = {D'Ambros, M and Lanza, M},
booktitle = {Softw. Maint. Reengineering},
doi = {10.1109/CSMR.2008.4493295},
file = {:home/saimir/ownCloud/Mendeley Bibliography/D'Ambros, Lanza - 2008.pdf:pdf},
mendeley-groups = {thesis},
month = {apr},
pages = {3--12},
title = {{A Flexible Framework to Support Collaborative Software Evolution Analysis}},
year = {2008}
}
@article{DAmbros2009,
abstract = {Software evolution analysis provides a valuable source of information that can be used both to understand a system's design and predict its future development. While for many program comprehension purposes, it is sufficient to model a single version of a system, there are types of information that can only be recovered when the history of a system is taken into account. Logical coupling, the implicit dependency between software artifacts that have been changed together, is an example of such information. Previous research has dealt with low-level couplings between files, leading to an explosion of the data to be analyzed, or has abstracted the logical couplings to the level of modules, leading to a loss of detailed information. In this paper, we present a visualization-based approach that integrates logical coupling information at different levels of abstraction. This facilitates an in-depth analysis of the logical couplings, and at the same time, leads to a characterization of a system's modules in terms of their logical coupling. The presented approach supports the retrospective analysis of a software system and maintenance activities such as restructuring and redocumentation. We illustrate retrospective analysis on two large open-source software systems.},
author = {D'Ambros, Marco and Lanza, Michele and Lungu, Mircea},
doi = {10.1109/TSE.2009.17},
file = {:home/saimir/ownCloud/Mendeley Bibliography/D'Ambros, Lanza, Lungu - 2009.pdf:pdf},
isbn = {2008020088},
issn = {00985589},
journal = {IEEE Trans. Softw. Eng.},
keywords = {,Logical coupling,Software evolution,Software visualization},
mendeley-groups = {Research proposal,thesis},
number = {5},
pages = {720--735},
title = {{Visualizing co-change information with the evolution radar}},
volume = {35},
year = {2009}
}
@article{delrioortega_definition_2013,
author = {Del-R{\'{i}}o-Ortega, Adela and Resinas, Manuel and Cabanillas, Cristina and Ruiz-Cort{\'{e}}s, Antonio},
journal = {Inf. Syst.},
mendeley-groups = {Research proposal,thesis},
number = {4},
pages = {470--490},
title = {{On the definition and design-time analysis of process performance indicators}},
volume = {38},
year = {2013}
}
@article{DoValle2017,
abstract = {CONTEXT
Process assessments are performed to identify the current maturity of organizations in relation to best practices. Existing process assessment methods, although widely used, have limitations such as: dependence on the competencies of appraisers; high amount of effort and resources required; subjectivity to analyze data and to judge on the implementation of practices; low confidence in sampling and its representativeness. Currently, due to the increasing use of information systems to support process execution, detailed information on the implementation of processes are recorded as event logs, transaction logs, etc. This fact enables the usage of process mining techniques as a powerful tool for process analysis. It allows using a significant amount of data with agility and reliability for process assessments. 

OBJECTIVE
The objective of this paper is to present the development and application of a feasible, usable and useful method, which reduces the limitations of current SCAMPI method and defines how to apply process mining techniques in SCAMPI-based process assessments 

METHOD
Research method comprises nine steps that were performed in a manner that raised questions in the first four steps were answered by the last four steps of the research design. 

RESULTS
The method “Process Mining Extension to SCAMPI” was designed, developed, applied in two cases and submitted for review by experts who judged it viable, usable, and useful. 

CONCLUSIONS
As per this research, process mining techniques are suitable to be applied in software process assessments since they are aligned with the purposes of data collection and analysis tasks. In addition to that, the resulting method was judged by experts as something that reduces identified limitations of one of the most used process assessment method.},
author = {do Valle, Arthur M and Santos, Eduardo A P and Loures, Eduardo de F R},
doi = {10.1016/j.infsof.2017.01.004},
issn = {09505849},
journal = {Inf. Softw. Technol.},
keywords = {Data collection and analysis,Process Mining Extension to SCAMPI,Process mining,SCAMPI,Software process assessment},
mendeley-groups = {thesis},
pages = {1--13},
publisher = {Elsevier B.V.},
title = {{Applying Process Mining Techniques in Software Process Appraisals}},
volume = {0},
year = {2017}
}
@inproceedings{DBLP:conf/vissoft/Elsen13,
author = {Elsen, Stefan},
booktitle = {2013 First {\{}IEEE{\}} Work. Conf. Softw. Vis. (VISSOFT), Eindhoven, Netherlands, Sept. 27-28, 2013},
doi = {10.1109/VISSOFT.2013.6650522},
mendeley-groups = {thesis},
pages = {1--4},
title = {{VisGi: Visualizing Git branches}},
year = {2013}
}
@inproceedings{feldt2013supporting,
author = {Feldt, Robert and Staron, Miroslaw and Hult, Erika and Liljegren, Thomas},
booktitle = {Softw. Eng. Adv. Appl. (SEAA), 2013 39th EUROMICRO Conf.},
mendeley-groups = {Research proposal,thesis},
organization = {IEEE},
pages = {62--69},
title = {{Supporting software decision meetings: Heatmaps for visualising test and code measurements}},
year = {2013}
}
@article{Goncalves2011,
abstract = {Process Modeling has been a very active research topic for the last decades. One of its main issues is the externalization of knowledge and its acquisition for further use, as this remains deeply related to the quality of the resulting process models produced by this task. This paper presents a method and a graphical supporting tool for process elicitation and modeling, combining the Group Storytelling technique with the advances of Text Mining and Natural Language Processing. The implemented tool extends its previous versions with several functionalities to facilitate group story telling by the users, as well as to improve the results of the acquired process model from the stories},
author = {Gon{\c{c}}alves, Jo{\~{a}}o Carlos De A R and Santoro, Fl{\'{a}}via Maria and Bai{\~{a}}o, Fernanda Araujo},
isbn = {0948-695X},
issn = {0948695X},
journal = {J. Univers. Comput. Sci.},
keywords = {2,4,7,business process modeling,categories,computer-supported collaborative work,h,i,knowledge management,text mining},
mendeley-groups = {thesis},
number = {2},
pages = {276--295},
title = {{Let Me Tell You a Story - On How to Build Process Models}},
volume = {17},
year = {2011}
}
@inproceedings{Beheshti2013,
	abstract = {Processes in case management applications are flexible, knowledge-intensive and people-driven, and often used as guides for workers in processing of artifacts. An important fact is the evolution of process artifacts over time as they are touched by different people in the context of a knowledge-intensive process. This highlights the need for tracking process artifacts in order to find out their history (artifact versioning) and also provenance (where they come from, and who touched and did what on them). We present a framework, simple abstractions and a language for analyzing cross-cutting aspects (in particular versioning and provenance) over process artifacts. We introduce two concepts of timed-folders to represent evolution of artifacts over time, and activity-paths to represent the process which led to artifacts. The introduced approaches have been implemented on top of FPSPARQL, Folder-Path enabled extension of SPARQL, and experimentally validated on real-world datasets. {\textcopyright} 2013 Springer-Verlag.},
	author = {Beheshti, Seyed Mehdi Reza and Benatallah, Boualem and Motahari-Nezhad, Hamid Reza},
	booktitle = {Lect. Notes Comput. Sci. (including Subser. Lect. Notes Artif. Intell. Lect. Notes Bioinformatics)},
	doi = {10.1007/978-3-642-38709-8_4},
	isbn = {9783642387081},
	issn = {03029743},
	keywords = {Ad-hoc Business Processes,Case Management,Provenance},
	title = {{Enabling the analysis of cross-cutting aspects in ad-hoc processes}},
	year = {2013}
}
@inproceedings{Greene2015,
abstract = {Version control repositories contain a wealth of implicit information that can be used to answer many questions about a project's development process. However, this information is not directly accessible in the version control archives and must be extracted and visualized. This paper describes ConceptCloud, a flexible, interactive browser for SVN and Git repositories. The main novelty of our approach is the combination of an intuitive tag cloud visualization with an underlying concept lattice that provides a formal structure for navigation. ConceptCloud supports concurrent navigation in multiple linked but individually customizable tag clouds, which allows for multi-faceted repository browsing and for the construction of unique visualizations. We describe the mathematical foundations and implementation of our approach, and use ConceptCloud to quickly gain insight into the team structure and development process of two projects.},
author = {Greene, Gillian J and Fischer, Bernd},
booktitle = {2015 IEEE 3rd Work. Conf. Softw. Vis. Viss. 2015 - Proc.},
doi = {10.1109/VISSOFT.2015.7332415},
isbn = {9781467375269},
keywords = {,Browsers,Context,Data visualization,Lattices,Navigation,Software,Tag clouds},
mendeley-groups = {thesis},
pages = {56--65},
title = {{Interactive tag cloud visualization of software version control repositories}},
year = {2015}
}
@article{Gubichev2010,
author = {Gubichev, Andrey and Bedathur, Srikanta and Seufert, Stephan and Weikum, Gerhard},
doi = {10.1145/1871437.1871503},
isbn = {9781450300995},
journal = {Proc. 19th ACM Int. Conf. Inf. Knowl. Manag. - CIKM '10},
keywords = {graph databases,shortest paths,social networks},
mendeley-groups = {thesis},
pages = {499},
title = {{Fast and accurate estimation of shortest paths in large graphs}},
year = {2010}
}
@inproceedings{Hou2014,
author = {Hou, Qiuju and Ma, Yutao and Chen, Jianxun and Xu, Youwei},
booktitle = {26th Int. Conf. Softw. Eng. Knowl. Eng. Hyatt Regency, Vancouver, BC, Canada, July 1-3, 2013.},
editor = {Reformat, Marek},
mendeley-groups = {Research proposal,thesis},
pages = {132--137},
publisher = {Knowledge Systems Institute Graduate School},
title = {{An Empirical Study on Inter-Commit Times in {\{}SVN{\}}}},
year = {2014}
}
@proceedings{DBLP:conf/ejc/2016,
editor = {Jaakkola, Hannu and Thalheim, Bernhard and Kiyoki, Yasushi and Yoshida, Naofumi},
isbn = {978-1-61499-719-1},
mendeley-groups = {thesis},
publisher = {{\{}IOS{\}} Press},
series = {Frontiers in Artificial Intelligence and Applications},
title = {{Information Modelling and Knowledge Bases XXVIII, 26th International Conference on Information Modelling and Knowledge Bases {\{}(EJC{\}} 2016), Tampere, Finland, June 6-10, 2016}},
volume = {292},
year = {2017}
}
@inproceedings{kagdi_mining_2006,
author = {Kagdi, Huzefa and Yusuf, Shehnaaz and Maletic, Jonathan I},
booktitle = {Work. Min. Softw. Repos. (MSR '06)},
doi = {10.1145/1137983.1137996},
mendeley-groups = {Research proposal,thesis},
pages = {47--53},
publisher = {ACM},
title = {{Mining Sequences of Changed-files from Version Histories}},
year = {2006}
}
@article{kindler2006activity,
author = {Kindler, Ekkart and Rubin, Vladimir and Sch{\"{a}}fer, Wilhelm},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Kindler, Rubin, Sch{\"{a}}fer - 2006.pdf:pdf},
journal = {Softw. Eng.},
mendeley-groups = {Damjan,thesis},
pages = {175--180},
title = {{Activity Mining for Discovering Software Process Models}},
volume = {79},
year = {2006}
}
@incollection{kindler2006incremental,
author = {Kindler, Ekkart and Rubin, Vladimir and Sch{\"{a}}fer, Wilhelm},
booktitle = {Unifying Softw. Process Spectr.},
doi = {10.1007/11608035_25},
editor = {Li, Mingshu and Boehm, Barry and Osterweil, LeonJ.},
isbn = {978-3-540-31112-6},
mendeley-groups = {Research proposal,thesis},
pages = {287--301},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Incremental Workflow Mining Based on Document Versioning Information}},
url = {http://dx.doi.org/10.1007/11608035{\_}25},
volume = {3840},
year = {2006}
}
@article{kuhn2010software,
author = {Kuhn, Adrian and Erni, David and Loretan, Peter and Nierstrasz, Oscar},
journal = {J. Softw. Maint. Evol. Res. Pract.},
mendeley-groups = {Research proposal,thesis},
number = {3},
pages = {191--210},
publisher = {Wiley Online Library},
title = {{Software cartography: Thematic software visualization with consistent layout}},
volume = {22},
year = {2010}
}
@inproceedings{DBLP:conf/ejc/LehtonenAKM16,
author = {Lehtonen, Timo and Aho, Timo and Kuusinen, Kati and Mikkonen, Tommi},
booktitle = {Inf. Model. Knowl. Bases XXVIII, 26th Int. Conf. Inf. Model. Knowl. Bases {\{}(EJC{\}} 2016), Tampere, Finland, June 6-10, 2016},
doi = {10.3233/978-1-61499-720-7-1},
mendeley-groups = {thesis},
pages = {1--12},
title = {{Visualizations for Software Development Process Management}},
year = {2016}
}
@book{Leopold2013,
author = {Leopold, Henrik},
doi = {10.1007/978-3-319-04175-9},
isbn = {978-3-319-04174-2},
mendeley-groups = {Research proposal,Damjan,thesis},
publisher = {Springer},
series = {Lecture Notes in Business Information Processing},
title = {{Natural Language in Business Process Models - Theoretical Foundations, Techniques, and Applications}},
url = {https://doi.org/10.1007/978-3-319-04175-9},
volume = {168},
year = {2013}
}
@article{lindberg2016coordinating,
author = {Lindberg, Aron and Berente, Nicholas and Gaskin, James and Lyytinen, Kalle},
journal = {Inf. Syst. Res.},
mendeley-groups = {thesis},
number = {4},
pages = {751--772},
publisher = {INFORMS},
title = {{Coordinating interdependencies in online communities: A study of an open source software project}},
volume = {27},
year = {2016}
}
@article{liu2014source,
author = {Liu, CHANG and Ye, Xin and Ye, E N},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Liu, Ye, Ye - 2014.pdf:pdf},
mendeley-groups = {thesis},
publisher = {IEEE},
title = {{Source Code Revision History Visualization Tools: Do They Work And What Would It Take to Put Them to Work?}},
year = {2014}
}
@inproceedings{Mittal2014,
address = {New York, NY, USA},
author = {Mittal, Megha and Sureka, Ashish},
booktitle = {Companion Proc. 36th Int. Conf. Softw. Eng.},
doi = {10.1145/2591062.2591152},
isbn = {978-1-4503-2768-8},
keywords = { Learning Analytic, Mining Software Repositories, Process Mining, Software Engineering Education,Education Data Mining},
mendeley-groups = {thesis},
pages = {344--353},
publisher = {ACM},
series = {ICSE Companion 2014},
title = {{Process Mining Software Repositories from Student Projects in an Undergraduate Software Engineering Course}},
year = {2014}
}
@proceedings{DBLP:conf/bpm/2015,
doi = {10.1007/978-3-319-23063-4},
editor = {Motahari-Nezhad, Hamid Reza and Recker, Jan and Weidlich, Matthias},
isbn = {978-3-319-23062-7},
mendeley-groups = {thesis},
publisher = {Springer},
series = {Lecture Notes in Computer Science},
title = {{Business Process Management - 13th International Conference, {\{}BPM{\}} 2015, Innsbruck, Austria, August 31 - September 3, 2015, Proceedings}},
volume = {9253},
year = {2015}
}
@proceedings{DBLP:conf/apsec/2013,
editor = {Muenchaisri, Pornsiri and Rothermel, Gregg},
isbn = {978-1-4799-2143-0},
mendeley-groups = {thesis},
publisher = {{\{}IEEE{\}} Computer Society},
title = {{20th Asia-Pacific Software Engineering Conference, {\{}APSEC{\}} 2013, Ratchathewi, Bangkok, Thailand, December 2-5, 2013 - Volume 2}},
year = {2013}
}
@inproceedings{ogawa2010software,
author = {Ogawa, Michael and Ma, Kwan-Liu},
booktitle = {Proc. 5th Int. Symp. Softw. Vis.},
mendeley-groups = {Research proposal,thesis},
organization = {ACM},
pages = {35--42},
title = {{Software evolution storylines}},
year = {2010}
}
@article{Oliva2011,
abstract = {Logical dependencies are implicit relationships established between software artifacts that have evolved together. Software engineering researchers have investigated this kind of dependency to assess fault-proneness, detect design issues, infer code decay, and predict likely changes in code. Despite the acknowledged relation between logical dependencies and software quality, the nature of the logical dependencies is unknown in the literature. Most authors hypothesize about their origins, but no empirical study has been conducted to investigate the real nature of these dependencies. In this paper, we investigated the origins of logical dependencies by means of a case study involving a Java FLOSS project. We mined the project repository, filtered out irrelevant data based on statistical analyses, and performed a manual inspection of the logical dependencies to identify their origins using information from the revision comments, code diffs, and informal interviews held with the developers of the analyzed project. Preliminary results showed that logical dependencies involved files that changed together for a series of different reasons, which ranged from changing software license to refactoring classes that belonged to the same semantic class. {\textcopyright}2011 ACM.},
author = {Oliva, Gustavo A and Santana, Francisco W S and Gerosa, Marco A and de Souza, Cleidson R B},
doi = {10.1145/2024445.2024452},
isbn = {9781450308489},
journal = {Proc. 12th Int. Work. 7th Annu. ERCIM Work. Princ. Softw. Evol. Softw. Evol. - IWPSE-EVOL '11},
keywords = {case study,change coupling,empirical software engineering,logical coupling,logical dependencies,mining software repositories,software evolution},
mendeley-groups = {thesis},
pages = {31},
title = {{Towards a classification of logical dependencies origins}},
year = {2011}
}
@techreport{bpmn2_stable,
author = {OMG},
institution = {OMG},
mendeley-groups = {thesis},
title = {{BPMN 2.0}},
type = {Recommendation},
year = {2011}
}
@article{Peffers2008,
abstract = {The paper motivates, presents, demonstrates in use, and evaluates a methodology for conducting design science (DS) research in information systems (IS). DS is of importance in a discipline oriented to the creation of successful artifacts. Several researchers have pioneered DS research in IS, yet over the past 15 years, little DS research has been done within the discipline. The lack of a methodology to serve as a commonly accepted framework for DS research and of a template for its presentation may have contributed to its slow adoption. The design science research methodology (DSRM) presented here incorporates principles, practices, and procedures required to carry out such research and meets three objectives: it is consistent with prior literature, it provides a nominal process model for doing DS research, and it provides a mental model for presenting and evaluating DS research in IS. The DS process includes six steps: problem identification and motivation, definition of the objectives for a solution, design and development, demonstration, evaluation, and communication. We demonstrate and evaluate the methodology by presenting four case studies in terms of the DSRM, including cases that present the design of a database to support health assessment methods, a software reuse measure, an Internet video telephony application, and an IS planning method. The designed methodology effectively satisfies the three objectives and has the potential to help aid the acceptance of DS research in the IS discipline.},
author = {Peffers, Ken and Tuunanen, Tuure and Rothenberger, Marcus and Chatterjee, Samir},
doi = {10.2753/MIS0742-1222240302},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Peffers et al. - 2008.pdf:pdf},
isbn = {0742-1222},
issn = {0742-1222},
journal = {J. Manag. Inf. Syst.},
mendeley-groups = {Research proposal,thesis},
number = {January},
pages = {45--77},
pmid = {28843849},
title = {{A Design Science Research Methodology for Information Systems Research}},
volume = {24},
year = {2008}
}
@proceedings{DBLP:conf/msr/2015,
editor = {Penta, Massimiliano Di and Pinzger, Martin and Robbes, Romain},
isbn = {978-0-7695-5594-2},
mendeley-groups = {thesis},
publisher = {IEEE},
title = {{12th {\{}IEEE/ACM{\}} Working Conference on Mining Software Repositories, {\{}MSR{\}} 2015, Florence, Italy, May 16-17, 2015}},
year = {2015}
}
@book{pilato2008version,
author = {Pilato, C Michael and Collins-Sussman, Ben and Fitzpatrick, Brian W},
mendeley-groups = {Research proposal,thesis},
publisher = {"O'Reilly Media, Inc."},
title = {{Version control with subversion}},
year = {2008}
}
@article{Poncin2011a,
abstract = {Software developers{\&}{\#}x02019; activities are in general recorded in software repositories such as version control systems, bug trackers and mail archives. While abundant information is usually present in such repositories, successful information extraction is often challenged by the necessity to simultaneously analyze different repositories and to combine the information obtained. We propose to apply process mining techniques, originally developed for business process analysis, to address this challenge. However, in order for process mining to become applicable, different software repositories should be combined, and {\&}{\#}x0201C;related{\&}{\#}x0201D; software development events should be matched: e.g., mails sent about a file, modifications of the file and bug reports that can be traced back to it. The combination and matching of events has been implemented in FRASR (Framework for Analyzing Software Repositories), augmenting the process mining framework ProM. FRASR has been successfully applied in a series of case studies addressing such aspects of the development process as roles of different developers and the way bug reports are handled.},
author = {Poncin, Wouter and Serebrenik, Alexander and van den Brand, Mark},
doi = {10.1109/CSMR.2011.5},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Poncin, Serebrenik, Brand - 2011.pdf:pdf},
isbn = {978-1-61284-259-2},
issn = {1534-5351},
journal = {2011 15th Eur. Conf. Softw. Maint. Reengineering},
keywords = {-process mining,process mining, software repositories,software repositories},
mendeley-groups = {Research proposal,thesis},
pages = {5--14},
title = {{Process Mining Software Repositories}},
url = {http://ieeexplore.ieee.org/document/5741254/},
year = {2011}
}
@inproceedings{DBLP:conf/msr/RayNBNZ15,
author = {Ray, Baishakhi and Nagappan, Meiyappan and Bird, Christian and Nagappan, Nachiappan and Zimmermann, Thomas},
booktitle = {12th {\{}IEEE/ACM{\}} Work. Conf. Min. Softw. Repos. {\{}MSR{\}} 2015, Florence, Italy, May 16-17, 2015},
doi = {10.1109/MSR.2015.11},
mendeley-groups = {thesis},
pages = {34--44},
title = {{The Uniqueness of Changes: Characteristics and Applications}},
year = {2015}
}
@inproceedings{DBLP:conf/seke/2014,
editor = {Reformat, Marek},
mendeley-groups = {Research proposal,thesis},
publisher = {Knowledge Systems Institute Graduate School},
title = {{The 26th International Conference on Software Engineering and Knowledge Engineering, Hyatt Regency, Vancouver, BC, Canada, July 1-3, 2013}},
year = {2014}
}
@article{Ripley2007,
abstract = {Real-time awareness of other developers' activities is a powerful tool to assist in coordination of developer activities. Thus far, this type of awareness has focused only on individual developers, with information regarding individual artifacts provided in a contextualized visualization. Here, we build upon our prior work, but take a broader perspective: visualization and exploration of workspace activity and evolution on a project-wide basis. We believe this visualization helps project managers who now have a comprehensive view of all project activities, allowing them to intelligently steer development and adjust task assignments. Developers can also benefit from this high level view by understanding how their work relates with each other and to the project as a whole. Another interesting aspect of our work is that we can visualize the evolution of workspaces - and the emergent project evolution - either live or postmortem: since our tool stores all the workspaces' events, we can replay, stop, rewind, and visually inspect the effort at any given point in time to find trends, problems, and other patterns of interest.},
author = {Ripley, Roger M and Sarma, Anita and {Van Der Hoek}, Andr{\'{e}}},
doi = {10.1109/VISSOF.2007.4290712},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Ripley, Sarma, Van Der Hoek - 2007.pdf:pdf},
isbn = {1424406005},
journal = {Viss. 2007 - Proc. 4th IEEE Int. Work. Vis. Softw. Underst. Anal.},
mendeley-groups = {thesis},
pages = {137--144},
title = {{A visualization for software project awareness and evolution}},
year = {2007}
}
@inproceedings{Robles:2014:EDE:2597073.2597107,
address = {New York, NY, USA},
author = {Robles, Gregorio and Gonz{\'{a}}lez-Barahona, Jes{\'{u}}s M and Cervig{\'{o}}n, Carlos and Capiluppi, Andrea and Izquierdo-Cort{\'{a}}zar, Daniel},
booktitle = {Proc. 11th Work. Conf. Min. Softw. Repos.},
doi = {10.1145/2597073.2597107},
isbn = {978-1-4503-2863-0},
keywords = { free software, mining software repositories, open source,Effort estimation},
mendeley-groups = {thesis},
pages = {222--231},
publisher = {ACM},
series = {MSR 2014},
title = {{Estimating Development Effort in Free/Open Source Software Projects by Mining Software Repositories: A Case Study of OpenStack}},
year = {2014}
}
@article{rosemann2005application,
author = {Rosemann, Michael and {De Bruin}, Tonia},
journal = {BP Trends},
mendeley-groups = {Research proposal,thesis},
pages = {1--21},
publisher = {Feb},
title = {{Application of a holistic model for determining BPM maturity}},
year = {2005}
}
@inproceedings{rubin2014process,
author = {Rubin, Vladimir A and Mitsyuk, Alexey A and Lomazova, Irina A and van der Aalst, Wil M P},
booktitle = {Proc. 8th ACM/IEEE Int. Symp. Empir. Softw. Eng. Meas.},
mendeley-groups = {thesis},
organization = {ACM},
pages = {57},
title = {{Process mining can be applied to software too!}},
year = {2014}
}
@incollection{rubin2007process,
author = {Rubin, Vladimir and G{\"{u}}nther, Christian W and {Van Der Aalst}, Wil M P and Kindler, Ekkart and {Van Dongen}, Boudewijn F and Sch{\"{a}}fer, Wilhelm},
booktitle = {Softw. Process Dyn. Agil.},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Rubin et al. - 2007.pdf:pdf},
mendeley-groups = {Damjan,thesis},
pages = {169--181},
publisher = {Springer},
title = {{Process mining framework for software processes}},
year = {2007}
}
@inproceedings{rubin2014agile,
author = {Rubin, Vladimir and Lomazova, Irina and van der Aalst, Wil M P},
booktitle = {Proc. 2014 Int. Conf. Softw. Syst. Process},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Rubin, Lomazova, van der Aalst - 2014.pdf:pdf},
mendeley-groups = {thesis},
organization = {ACM},
pages = {70--74},
title = {{Agile development with software process mining}},
year = {2014}
}
@book{Beheshti2016,
	abstract = {This book starts with an introduction to process modeling and process paradigms, then explains how to query and analyze process models, and how to analyze the process execution data. In this way, readers receive a comprehensive overview of what is needed to identify, understand and improve business processes. The book chiefly focuses on concepts, techniques and methods. It covers a large body of knowledge on process analytics - including process data querying, analysis, matching and correlating process data and models - to help practitioners and researchers understand the underlying concepts, problems, methods, tools and techniques involved in modern process analytics. Following an introduction to basic business process and process analytics concepts, it describes the state of the art in this area before examining different analytics techniques in detail. In this regard, the book covers analytics over different levels of process abstractions, from process execution data and methods for linking and correlating process execution data, to inferring process models, querying process execution data and process models, and scalable process data analytics methods. In addition, it provides a review of commercial process analytics tools and their practical applications. The book is intended for a broad readership interested in business process management and process analytics. It provides researchers with an introduction to these fields by comprehensively classifying the current state of research, by describing in-depth techniques and methods, and by highlighting future research directions. Lecturers will find a wealth of material to choose from for a variety of courses, ranging from undergraduate courses in business process management to graduate courses in business process analytics. Lastly, it offers professionals a reference guide to the state of the art in commercial tools and techniques, complemented by many real-world use case scenarios.},
	author = {Beheshti, Seyed Mehdi Reza and Benatallah, Boualem and Sakr, Sherif and Grigori, Daniela and Motahari-Nezhad, Hamid Reza and Barukh, Moshe Chai and Gater, Ahmed and Ryu, Seung Hwan},
	booktitle = {Process Anal. Concepts Tech. Querying Anal. Process Data},
	doi = {10.1007/978-3-319-25037-3},
	isbn = {9783319250373},
	title = {{Process analytics: Concepts and techniques for querying and analyzing process data}},
	year = {2016}
}
@article{Ruohonen2015,
author = {Ruohonen, Jukka and Hyrynsalmi, Sami},
doi = {10.1002/smr},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Ruohonen, Hyrynsalmi - 2015.pdf:pdf},
keywords = {dynamic regression,software evolution,stationarity,time series analysis,unit roots},
mendeley-groups = {thesis},
number = {November},
pages = {990--1015},
title = {{Time series trends in software evolution}},
year = {2015}
}
@article{torvalds2010git,
author = {Torvalds, Linus and Hamano, Junio},
journal = {URL http//git-scm. com},
mendeley-groups = {Research proposal,thesis},
title = {{Git: Fast version control system}},
year = {2010}
}
@article{vanderaalst_formalization_1999,
author = {van der Aalst, W M P},
journal = {Inf. Softw. Technol.},
mendeley-groups = {Research proposal,thesis},
number = {10},
pages = {639--650},
title = {{Formalization and verification of event-driven process chains}},
volume = {41},
year = {1999}
}
@book{van2011process,
author = {{Van Der Aalst}, Wil},
mendeley-groups = {Research proposal,thesis},
publisher = {Springer Science {\&} Business Media},
title = {{Process mining: discovery, conformance and enhancement of business processes}},
year = {2011}
}
@article{aalst_application_1998,
author = {van der Aalst, Wil M P},
journal = {J. Circuits, Syst. Comput.},
mendeley-groups = {Research proposal,thesis},
number = {1},
pages = {21--66},
title = {{The Application of Petri Nets to Workflow Management}},
volume = {8},
year = {1998}
}
@article{VanderAalst2010,
author = {van der Aalst, Wil M P and Rubin, Vladimir A and Verbeek, H M W and van Dongen, Boudewijn F and Kindler, Ekkart and G{\"{u}}nther, Christian W},
doi = {10.1007/s10270-008-0106-z},
journal = {Softw. Syst. Model.},
mendeley-groups = {thesis},
number = {1},
pages = {87--111},
title = {{Process mining: a two-step approach to balance between underfitting and overfitting}},
volume = {9},
year = {2010}
}
@article{VanderAalst2009,
author = {van der Aalst, Wil and Pesic, Maja and Schonenberg, Helen},
journal = {Comput. Sci. - Res. Dev.},
mendeley-groups = {Research proposal,thesis},
number = {2},
pages = {99--113},
title = {{Declarative workflows: Balancing between flexibility and support}},
volume = {23},
year = {2009}
}
@incollection{van2005prom,
author = {van Dongen, Boudewijn F and de Medeiros, Ana Karla A and Verbeek, H M W and Weijters, AJMM and {Van Der Aalst}, Wil M P},
booktitle = {Appl. Theory Petri Nets 2005},
mendeley-groups = {Research proposal,thesis},
pages = {444--454},
publisher = {Springer},
title = {{The ProM framework: A new era in process mining tool support}},
year = {2005}
}
@article{van2005meta,
author = {van Dongen, Boudewijn F and der Aalst, Wil M P},
journal = {EMOI-INTEROP},
mendeley-groups = {Research proposal,thesis},
pages = {30},
title = {{A Meta Model for Process Mining Data}},
volume = {160},
year = {2005}
}
@incollection{Verbeek2011,
author = {Verbeek, H M W and Buijs, Joos C A M and {Van Dongen}, Boudewijn F and {Van Der Aalst}, Wil M P},
booktitle = {Inf. Syst. Evol.},
mendeley-groups = {Research proposal,thesis},
pages = {60--75},
publisher = {Springer},
title = {{Xes, xesame, and prom 6}},
year = {2011}
}
@article{Voinea2006b,
author = {Voinea, Lucian and Telea, Alexandru},
editor = {Santos, Beatriz Sousa and Ertl, Thomas and Joy, Kenneth I},
journal = {EuroVis06 Jt. Eurographics - {\{}IEEE{\}} {\{}VGTC{\}} Symp. Vis. Lisbon, Port. 8-10 May 2006},
mendeley-groups = {thesis},
pages = {187--194},
publisher = {Eurographics Association},
title = {{CVSgrab: Mining the History of Large Software Projects}},
url = {http://dx.doi.org/10.2312/VisSym/EuroVis06/187-194},
year = {2006}
}
@inproceedings{voinea_multiscale_2006,
author = {Voinea, Lucian and Telea, Alexandru},
booktitle = {Symp. Softw. Vis.},
doi = {10.1145/1148493.1148510},
mendeley-groups = {Research proposal,thesis},
pages = {115--124},
publisher = {ACM},
title = {{Multiscale and Multivariate Visualizations of Software Evolution}},
year = {2006}
}
@inproceedings{voinea_open_2006,
author = {Voinea, Lucian and Telea, Alexandru},
booktitle = {Int. Work. Min. Softw. Repos. (MSR '06)},
doi = {10.1145/1137983.1137993},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Voinea, Telea - 2006.pdf:pdf},
mendeley-groups = {thesis},
pages = {33--39},
publisher = {ACM},
title = {{An Open Framework for CVS Repository Querying, Analysis and Visualization}},
year = {2006}
}
@inproceedings{Weicheng2013,
author = {Weicheng, Yang and Shen, Beijun and Xu, Ben},
booktitle = {APSEC 2013, Ratchathewi,Thailand, December 2-5, 2013 - Vol. 2},
doi = {10.1109/APSEC.2013.133},
editor = {Muenchaisri, Pornsiri and Rothermel, Gregg},
mendeley-groups = {Research proposal,Damjan,thesis},
pages = {165--169},
publisher = {IEEE Computer Society},
title = {{Mining GitHub: Why Commit Stops - Exploring the Relationship between Developer's Commit Pattern and File Version Evolution}},
year = {2013}
}
@article{wilson2003gantt,
author = {Wilson, James M},
journal = {Eur. J. Oper. Res.},
mendeley-groups = {Research proposal,thesis},
number = {2},
pages = {430--437},
publisher = {Elsevier},
title = {{Gantt charts: A centenary appreciation}},
volume = {149},
year = {2003}
}
@book{Winograd1986a,
author = {Winograd, Terry and Flores, Fernando},
edition = {3},
isbn = {0201112973},
mendeley-groups = {thesis},
publisher = {Addison-Wesley},
title = {{Understanding computers and cognition: A new foundation for design}},
year = {1986}
}
@inproceedings{jingwei_evolution_2004,
author = {Wu, Jingwei and Spitzer, C W and Hassan, A E and Holt, R C},
booktitle = {Work. Princ. Softw. Evol.},
doi = {10.1109/IWPSE.2004.1334769},
mendeley-groups = {Research proposal,thesis},
month = {sep},
pages = {57--66},
title = {{Evolution Spectrographs: visualizing punctuated change in software evolution}},
year = {2004}
}
@article{ying_predicting_2004,
author = {Ying, Annie T T and Murphy, Gail C and Ng, Raymond and Chu-Carroll, Mark C},
doi = {10.1109/TSE.2004.52},
journal = {IEEE Trans. Softw. Eng.},
mendeley-groups = {Research proposal,thesis},
month = {sep},
number = {9},
pages = {574--586},
publisher = {IEEE Press},
title = {{Predicting Source Code Changes by Mining Change History}},
volume = {30},
year = {2004}
}
@inproceedings{yoon2013visualization,
author = {Yoon, YoungSeok and Myers, Brad A and Koo, Sebon},
booktitle = {Vis. Lang. Human-Centric Comput. (VL/HCC), 2013 IEEE Symp.},
mendeley-groups = {Research proposal,thesis},
organization = {IEEE},
pages = {119--126},
title = {{Visualization of fine-grained code change history}},
year = {2013}
}
@inproceedings{zaidman2008mining,
annote = {co-evolution
Metrics: 
lines of code
release points

no labels},
author = {Zaidman, Andy and {Van Rompaey}, Bart and Demeyer, Serge and {Van Deursen}, Arie},
booktitle = {Softw. Testing, Verif. Validation, 2008 1st Int. Conf.},
mendeley-groups = {thesis},
organization = {IEEE},
pages = {220--229},
title = {{Mining software repositories to study co-evolution of production {\&} test code}},
year = {2008}
}
@inproceedings{zeising2014towards,
author = {Zeising, Michael and Sch{\"{o}}nig, Stefan and Jablonski, Stefan},
booktitle = {Collab. Comput. Networking, Appl. Work.},
mendeley-groups = {Research proposal,thesis},
title = {{Towards a Common Platform for the Support of Routine and Agile Business Processes}},
year = {2014}
}
@article{Zimmermann2008,
abstract = {In software development, resources for quality assurance are limited by time and by cost. In order to allocate resources effectively, managers need to rely on their experience backed by code complexity metrics. But often dependencies exist between various pieces of code over which managers may have little knowledge. These dependencies can be construed as a low level graph of the entire system. In this paper, we propose to use network analysis on these dependency graphs. This allows managers to identify central program units that are more likely to face defects. In our evaluation on Windows Server 2003, we found that the recall for models built from network measures is by 10{\%} points higher than for models built from complexity metrics. In addition, network measures could identify 60{\%} of the binaries that the Windows developers considered as critical-twice as many as identified by complexity metrics.},
author = {Zimmermann, Thomas and Nagappan, Nachiappan},
doi = {10.1145/1368088.1368161},
isbn = {9781605580791},
issn = {02705257},
journal = {Proc. 13th Int. Conf. Softw. Eng. - ICSE '08},
keywords = {Experimentation,Management,Measurement,Reliability},
mendeley-groups = {thesis},
pages = {531},
title = {{Predicting defects using network analysis on dependency graphs}},
year = {2008}
}
@inproceedings{zimmermann_mining_2004,
author = {Zimmermann, Thomas and Weisgerber, Peter and Diehl, Stephan and Zeller, Andreas},
booktitle = {Int. Conf. Softw. Eng. (ICSE '04)},
mendeley-groups = {Research proposal,thesis},
pages = {563--572},
publisher = {IEEE Computer Society},
title = {{Mining Version Histories to Guide Software Changes}},
year = {2004}
}
