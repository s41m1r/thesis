@article{Lu2015,
abstract = {Role mining is to define a role set to implement the role-based access control (RBAC) system and regarded as one of the most important and costliest implementation phases. While various role mining models have been proposed, we find that user experience/perception-one ultimate goal for any information system-is surprisingly ignored by the existing works. One advantage of RBAC is to support multiple role assignments and allow a user to activate the necessary role to perform the tasks at each session. However, frequent role activating and deactivating can be a tendinous thing from the user perspective. A user-friendly RBAC system is expected to assign few roles to every user. So in this paper we propose to incorporate to the role mining process a user-role assignment constraint that mandates the maximum number of roles each user can have. Under this rationale, we formulate user-oriented role mining as the user role mining problem, where all users have the same maximal role assignments, the personalized role mining problem, where users can have different maximal role assignments, and the approximate versions of the two problems, which tolerate a certain amount of deviation from the complete reconstruction. The extra constraint on the maximal role assignments poses a great challenge to role mining, which in general is already a hard problem. We examine some typical existing role mining methods to see their applicability to our problems. In light of their insufficiency, we present a new algorithm, which is based on a novel dynamic candidate role generation strategy, tailored to our problems. Experiments on benchmark data sets demonstrate the effectiveness of our proposed algorithm.},
author = {Lu, Haibing and Hong, Yuan and Yang, Yanjiang and Duan, Lian and Badar, Nazia},
doi = {10.3233/JCS-140519},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Journal of Computer Security/Lu et al. - 2015 - Journal of Computer Security - Towards user-oriented RBAC model.pdf:pdf},
isbn = {9783642392559},
issn = {0926227X},
journal = {J. Comput. Secur.},
keywords = {Role-based access control,heuristic algorithm,optimization,role mining,user-oriented},
number = {1},
pages = {107--129},
title = {{Towards user-oriented RBAC model}},
volume = {23},
year = {2015}
}
@article{Song2008,
abstract = {Process mining has emerged as a way to analyze processes based on the event logs of the systems that support them. Today's information systems (e.g., ERP systems) log all kinds of events. Moreover, also embedded systems (e.g., medical equipment, copiers, and other high-tech systems) start producing detailed event logs. The omnipresence of event logs is an important enabler for process mining. The primary goal of process mining is to extract knowledge from these logs and use it for a detailed analysis of reality. Lion's share of the efforts in this domain has been devoted to control-flow discovery. Many algorithms have been proposed to construct a process model based on an analysis of the event sequences observed in the log. As a result, other aspects have been neglected, e.g., the organizational setting and interactions among coworkers. Therefore, we focus on organizational mining. We will present techniques to discover organizational models and social networks and show how these models can assist in improving the underlying processes. To do this, we present new process mining techniques but also use existing techniques in an innovative manner. The approach has been implemented in the context of the ProM framework and has been applied in various case studies. In this paper, we demonstrate the applicability of our techniques by analyzing the logs of a municipality in the Netherlands. ?? 2008 Elsevier B.V. All rights reserved.},
author = {Song, Minseok and van der Aalst, Wil M P},
doi = {10.1016/j.dss.2008.07.002},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Decision Support Systems/Song, van der Aalst - 2008 - Decision Support Systems - Towards comprehensive support for organizational mining.pdf:pdf},
isbn = {0167-9236},
issn = {01679236},
journal = {Decis. Support Syst.},
keywords = {Business process management,Data mining,Petri nets,Process mining,Social network analysis,Workflow management},
number = {1},
pages = {300--317},
title = {{Towards comprehensive support for organizational mining}},
volume = {46},
year = {2008}
}
@inproceedings{Bird2009,
abstract = {We are now witnessing the rapid growth of decentralized source code management (DSCM) systems, in which every developer has her own repository. DSCMs facilitate a style of collaboration in which work output can flow sideways (and privately) between collaborators, rather than always up and down (and publicly) via a central repository. Decentralization comes with both the promise of new data and the peril of its misinterpretation. We focus on git, a very popular DSCM used in high-profile projects. Decentralization, and other features of git, such as automatically recorded contributor attribution, lead to richer content histories, giving rise to new questions such as ldquoHow do contributions flow between developers to the official project repository?rdquo However, there are pitfalls. Commits may be reordered, deleted, or edited as they move between repositories. The semantics of terms common to SCMs and DSCMs sometimes differ markedly, potentially creating confusion. For example, a commit is immediately visible to all developers in centralized SCMs, but not in DSCMs. Our goal is to help researchers interested in DSCMs avoid these and other perils when mining and analyzing git data.},
author = {Bird, Christian and Rigby, Peter C. and Barr, Earl T. and Hamilton, David J. and German, Daniel M. and Devanbu, Prem},
booktitle = {Proc. 2009 6th IEEE Int. Work. Conf. Min. Softw. Repos. MSR 2009},
doi = {10.1109/MSR.2009.5069475},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Proceedings of the 2009 6th IEEE International Working Conference on Mining Software Repositories, MSR 2009/Bird et al. - 2009 - Proceedings of the 2009 6th IEEE International Working Conference on Mining Software Repositories, MSR 2009 - The p.pdf:pdf},
isbn = {9781424434930},
keywords = {code reviews,git,github,mining software repositories},
organization = {IEEE},
pages = {1--10},
title = {{The promises and perils of mining GitHub}},
year = {2009}
}
@article{Fuller2014a,
abstract = {Organizations increasingly initiate Internet-based innovation-contest communities through which individuals can interact and contribute to the innovation process. To successfully manage these communities, organizations need to understand what roles members assume, how they communicate and vary in their contribution behavior. In this exploratory study, we investigate the heterogeneous roles of contest participants based on an international innovation-contest community. We identify six user types associated with various behavioral contribution patterns by using cluster and social network analysis. The six user types further differ in their communicative content and contribution quality. Our paper contributes to a better theoretical understanding of distinctive user types in innovation-contest communities, their role in the community, and their contribution to the success of innovation contests in the era of social software. From a managerial perspective, the study provides guidance for contest platform design and appropriate reward structures. [ABSTRACT FROM AUTHOR]},
annote = {Identify six user types associated with various behavioral contribution patterns by using cluster and social network analysis},
author = {F{\"{u}}ller, Johann and Hutter, Katja and Hautz, Julia and Matzler, Kurt},
doi = {10.2753/MIS0742-1222310111},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Journal of Management Information Systems/F{\"{u}}ller et al. - 2014 - Journal of Management Information Systems - User Roles and Contributions in Innovation-Contest Communities.pdf:pdf},
isbn = {0742-1222},
issn = {07421222},
journal = {J. Manag. Inf. Syst.},
keywords = {COMPETITIONS,CREATIVE ability in technology,EFFECT of technological innovations on employees,INTERNET use in business,INVENTIONS,SOCIAL aspects,SOCIAL media in business,SOCIAL networks,TECHNOLOGICAL innovations -- Competitions,TECHNOLOGICAL innovations -- Economic aspects,co-creation,innovation contests,online communities,user contribution,user roles},
number = {1},
pages = {273--308},
pmid = {97130737},
title = {{User Roles and Contributions in Innovation-Contest Communities.}},
volume = {31},
year = {2014}
}
@article{Maglyas2013a,
abstract = {Software product management covers both technical and business activities to management of products like roadmaps, strategic, tactical, and release planning. In practice, one product manager is seldom responsible for all these activities but several persons share the responsibilities. Therefore, it is important to understand the boundaries of product managers' work in managing software products, as well as the impact a product manager has on the company business. The purpose of the study is to clarify what roles of software product managers exist and understand how these roles are interrelated with each other and the whole structure and business of an organization. The study is designed as an interpretative qualitative study using grounded theory as the research method. Based on the gathered data we developed a framework that reveals the role of a product manager in the organization and shows how this role can evolve by extending the level of responsibilities. Using the framework, we identified four stereotypical roles of product managers in the studied organizations: experts, strategists, leaders, and problem solvers. The presented framework shows that product managers' roles are not limited to the conception of the "mini-CEO." The results allow product managers and top management to collaborate effectively by assigning responsibilities and managing expectations by having a common tool for understanding the role of product managers in the organization. {\textcopyright} 2013 Elsevier Inc. All rights reserved.},
author = {Maglyas, Andrey and Nikula, Uolevi and Smolander, Kari},
doi = {10.1016/j.jss.2013.07.045},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Journal of Systems and Software/Maglyas, Nikula, Smolander - 2013 - Journal of Systems and Software - What are the roles of software product managers An empirical inves.pdf:pdf},
issn = {01641212},
journal = {J. Syst. Softw.},
keywords = {Grounded theory,Management roles,Software product management},
number = {12},
pages = {3071--3090},
publisher = {Elsevier Inc.},
title = {{What are the roles of software product managers? An empirical investigation}},
url = {http://dx.doi.org/10.1016/j.jss.2013.07.045},
volume = {86},
year = {2013}
}
@book{OSullivan2009,
abstract = {This instructive book takes you step by step through ways to track, merge, and manage both open source and commercial software projects with Mercurial, using Windows, Mac OS X, Linux, Solaris, and other systems. Mercurial is the easiest system to learn when it comes to distributed revision control. And it's a very flexible tool that's ideal whether you're a lone programmer working on a small project, or part of a huge team dealing with thousands of files. Mercurial permits a countless variety of development and collaboration methods, and this book offers several concrete suggestions to get you started. This guide will help you:Learn the basics of working with a repository, changesets, and revisions Merge changes from separate repositories Set up Mercurial to work with files on a daily basis, including which ones to track Get examples and tools for setting up various workflow models Manage a project that's making progress on multiple fronts at once Find and fix mistakes by isolating problem sources Use hooks to perform actions automatically in response to repository events Customize the output of MercurialMercurial: The Definitive Guide maintains a strong focus on simplicity to help you learn Mercurial quickly and thoroughly.},
author = {O'Sullivan, B.},
booktitle = {OReilly},
file = {:home/saimir/ownCloud/Mendeley Bibliography/OReilly/O'Sullivan - 2009 - OReilly - Mercurial The Definitive Guide.pdf:pdf},
isbn = {9780596800673},
pages = {288},
title = {{Mercurial: The Definitive Guide}},
volume = {7},
year = {2009}
}
@incollection{rubin2007process,
abstract = {Software development processes are often not explicitly modelled and$\backslash$nsometimes even chaotic. In order to keep track of the involved documents$\backslash$nand files, engineers use Software Configuration Management (SCM)$\backslash$nsystems. Along the way, those systems collect and store information on$\backslash$nthe software process itself. Thus, SCM information can be used for$\backslash$nconstructing explicit process models, which is called software process$\backslash$nmining. In this paper we show that (1) a Process Mining Framework can be$\backslash$nused for obtaining software process models as well as for analysing and$\backslash$noptimising them; (2) an algorithmic approach, which arose from our$\backslash$nresearch on software processes, is integrated in the framework.},
annote = {gradual process support
handover of work

GREAT: multiperspective incremental mining
NOT SO GREAT: based only on filenames heuristics (apparently) and roles are given},
author = {Rubin, Vladimir A. and G{\"{u}}nther, Christian W. and {Van Der Aalst}, Wil M. P. and Kindler, Ekkart and {Van Dongen}, Boudewijn F. and Sch{\"{a}}fer, Wilhelm},
booktitle = {Softw. Process Dyn. Agil.},
doi = {10.1007/978-3-540-72426-1_15},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Software Process Dynamics and Agility/Rubin et al. - 2007 - Software Process Dynamics and Agility - Process mining framework for software processes.pdf:pdf},
isbn = {978-3-540-72425-4},
issn = {0302-9743},
keywords = {management,software process mining and},
pages = {169--181},
publisher = {Springer},
title = {{Process mining framework for software processes}},
volume = {4470},
year = {2007}
}
@inproceedings{voinea_open_2006,
abstract = {We present an open framework for visual mining of CVS software repositories. We address three aspects: data extraction, analysis and visualization. We first discuss the challenges of CVS data extraction and storage, and propose a flexible way to deal with CVS implementation inconsistencies. We next present a new technique to enrich the raw data with information about artifacts showing similar evolution. Finally, we propose a visualization backend and show its applicability on industry-size repositories.},
author = {Voinea, Lucian and Telea, Alexandru},
booktitle = {MSR '06 Proc. 2006 Int. Work. Min. Softw. Repos.},
doi = {http://doi.acm.org/10.1145/1137983.1137993},
file = {:home/saimir/ownCloud/Mendeley Bibliography/MSR '06 Proceedings of the 2006 international workshop on Mining software repositories/Voinea, Telea - 2006 - MSR '06 Proceedings of the 2006 international workshop on Mining software repositories - An open framework for CV.pdf:pdf},
isbn = {1-59593-397-2},
issn = {02705257},
keywords = {cvs repositories,evolution visualization,software visualization},
pages = {33--39},
publisher = {ACM},
title = {{An open framework for CVS repository querying, analysis and visualization}},
url = {http://portal.acm.org/citation.cfm?doid=1137983.1137993},
year = {2006}
}
@article{Alonso2008,
abstract = {As software evolves over time, the identification of expertise becomes an important problem. Component ownership and team awareness of such ownership are signals of solid project. Ownership and ownership awareness are also issues in open-source software (OSS) projects. Indeed, the membership in OSS projects is dynamic with team members arriving and leaving. In large open source projects, specialists who know the system very well are considered experts. How can one identify the experts in a project by mining a particular repository like the source code? Have they gotten help from other people? We provide an approach using classification of the source code tree as a path to derive the expertise of the committers. Because committers may get help from other people, we also retrieve their contributors. We also provide a visualization that helps to further explore the repository via committers and categories. We present a prototype implementation that describes our research using the Apache HTTP Web server project as a case study.},
author = {Alonso, Omar and Devanbu, Premkumar T. and Gertz, Michael},
doi = {10.1145/1370750.1370780},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Proceedings of the 2008 international workshop on Mining software repositories - MSR '08/Alonso, Devanbu, Gertz - 2008 - Proceedings of the 2008 international workshop on Mining software repositories - MSR '08 - Expertise ide.pdf:pdf},
isbn = {9781605580241},
issn = {02705257},
journal = {Proc. 2008 Int. Work. Min. Softw. Repos. - MSR '08},
keywords = {classification,expertise identification,information visualization},
pages = {125},
title = {{Expertise identification and visualization from CVS}},
url = {http://portal.acm.org/citation.cfm?doid=1370750.1370780},
year = {2008}
}
@article{Thomas2015,
abstract = {Researchers in software engineering have attempted to improve software development by mining and analyzing software repositories. Since the majority of the software engineering data is unstructured, researchers have applied Information Retrieval (IR) techniques to help software development. The recent advances of IR, especially statistical topic models, have helped make sense of unstructured data in software repositories even more. However, even though there are hundreds of studies on applying topic models to software repositories, there is no study that shows how the models are used in the software engineering research community, and which software engineering tasks are being supported through topic models. Moreover, since the performance of these topic models is directly related to the model parameters and usage, knowing how researchers use the topic models may also help future studies make optimal use of such models. Thus, we surveyed 167 articles from the software engineering literature that make use of topic models. We find that i) most studies centre around a limited number of software engineering tasks; ii) most studies use only basic topic models; iii) and researchers usually treat topic models as black boxes without fully exploring their underlying assumptions and parameter values. Our paper provides a starting point for new researchers who are interested in using topic models, and may help new researchers and practitioners determine how to best apply topic models to a particular software engineering task},
author = {Thomas, Tse-hsun Chen Stephen W and Hassan, Ahmed E},
doi = {10.1007/s10664-015-9402-8},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Empirical Software Engineering/Thomas, Hassan - 2015 - Empirical Software Engineering - A survey on the use of topic models when mining software repositories.pdf:pdf},
isbn = {1066401594028},
issn = {1382-3256},
journal = {Empir. Softw. Eng.},
keywords = {1 introduction and motivation,LDA,LSI,Survey,Topic modeling,have attempted to improve,lda,lsi,researchers in software engineering,software development by,survey,topic modeling},
title = {{A survey on the use of topic models when mining software repositories}},
url = {http://dx.doi.org/10.1007/s10664-015-9402-8},
year = {2015}
}
@article{chen2014software,
author = {Chen, Ning and Hoi, Steven C H and Xiao, Xiaokui},
journal = {Empir. Softw. Eng.},
number = {6},
pages = {1531--1564},
publisher = {Springer},
title = {{Software process evaluation: a machine learning framework with application to defect management process}},
volume = {19},
year = {2014}
}
@article{Ying2014,
abstract = {Developer profiles are representations that capture the characteristics of a software developer, including software development knowledge, organizational information, and communication networks. In recommendation systems in software engineering, developer profiles can be used for personalizing recommendations and for recommending developers who can assist with a task. This chapter describes techniques for capturing, representing, storing, and using developer profiles.},
annote = {Line 10 rule},
author = {Ying, Annie T T and Robillard, Martin P.},
doi = {10.1007/978-3-642-45135-5_8},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Recommendation Systems in Software Engineering/Ying, Robillard - 2014 - Recommendation Systems in Software Engineering - Developer profiles for recommendation systems.pdf:pdf},
isbn = {9783642451355},
journal = {Recomm. Syst. Softw. Eng.},
pages = {199--222},
title = {{Developer profiles for recommendation systems}},
year = {2014}
}
@article{hoda2013self,
author = {Hoda, Rashina and Noble, James and Marshall, Simon},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Software Engineering, IEEE Transactions on/Hoda, Noble, Marshall - 2013 - Software Engineering, IEEE Transactions on - Self-organizing roles on agile software development teams.pdf:pdf},
journal = {Softw. Eng. IEEE Trans.},
number = {3},
pages = {422--444},
publisher = {IEEE},
title = {{Self-organizing roles on agile software development teams}},
volume = {39},
year = {2013}
}
@inproceedings{Begel2010,
abstract = {Large-scale software engineering requires communication and collaboration to successfully build and ship products. We conducted a survey with Microsoft engineers on inter-team coordination and found that the most impactful problems concerned finding and keeping track of other engineers. Since engineers are connected by their shared work, a tool that discovers connections in their work-related repositories can help. Here we describe the Codebook framework for mining software repositories. It is flexible enough to address all of the problems identified by our survey with a single data structure (graph of people and artifacts) and a single algorithm (regular language reachability). Codebook handles a larger variety of problems than prior work, analyzes more kinds of work artifacts, and can be customized by and for end-users. To evaluate our framework's flexibility, we built two applications, Hoozizat and Deep Intellisense. We evaluated these applications with engineers to show effectiveness in addressing multiple inter-team coordination problems.},
author = {Begel, Andrew and Khoo, Yit Phang and Zimmermann, Thomas},
booktitle = {2010 ACM/IEEE 32nd Int. Conf. Softw. Eng.},
doi = {10.1145/1806799.1806821},
file = {:home/saimir/ownCloud/Mendeley Bibliography/2010 ACMIEEE 32nd International Conference on Software Engineering/Begel, Khoo, Zimmermann - 2010 - 2010 ACMIEEE 32nd International Conference on Software Engineering - Codebook discovering and exploitin.pdf:pdf},
isbn = {978-1-60558-719-6},
issn = {0270-5257},
keywords = {inter-team coordination,knowledge management,mining software repositories,regular expression,regular language reachability,social networking},
pages = {125--134},
title = {{Codebook: discovering and exploiting relationships in software repositories}},
volume = {1},
year = {2010}
}
@article{torvalds2010git,
author = {Torvalds, Linus and Hamano, Junio},
journal = {URL http//git-scm. com},
title = {{Git: Fast version control system}},
year = {2010}
}
@book{pilato2008version,
author = {Pilato, C Michael and Collins-Sussman, Ben and Fitzpatrick, Brian W},
publisher = {"O'Reilly Media, Inc."},
title = {{Version control with subversion}},
year = {2008}
}
@inproceedings{Yu.LiguoRamaswamy.2007,
abstract = {This paper presents a model to represent the interactions of distributed open-source software developers and utilizes data mining techniques to derive developer roles. The model is then applied on case studies of two open-source projects, ORAC-DR and Mediawiki with encouraging results.},
author = {Yu, Liguo and Ramaswamy, Srini},
booktitle = {Proc. - ICSE 2007 Work. Fourth Int. Work. Min. Softw. Repos. MSR 2007},
doi = {10.1109/MSR.2007.19},
file = {:home/saimir/ownCloud/Mendeley Bibliography/Proceedings - ICSE 2007 Workshops Fourth International Workshop on Mining Software Repositories, MSR 2007/Yu, Ramaswamy - 2007 - Proceedings - ICSE 2007 Workshops Fourth International Workshop on Mining Software Repositories, MSR 2007 - Mi(4).pdf:pdf},
isbn = {076952950X},
pages = {7--10},
title = {{Mining CVS repositories to understand open-source project developer roles}},
year = {2007}
}
@article{Kouters2012,
   abstract = {Understanding an individual's contribution to an ecosystem often necessitates integrating information from multiple repositories corresponding to different projects within the ecosystem or different kinds of repositories (e.g., mail archives and version control systems). However, recognising that different contributions belong to the same contributor is challenging, since developers may use different aliases. It is known that existing identity merging algorithms are sensitive to large discrepancies between the aliases used by the same individual: the noisier the data, the worse their performance. To assess the scale of the problem for a large software ecosystem, we study all Gnome Git repositories, classify the differences in aliases, and discuss robustness of existing algorithms with respect to these types of differences. We then propose a new identity merging algorithm based on Latent Semantic Analysis (LSA), designed to be robust against more types of differences in aliases, and evaluate it empirically by means of cross-validation on Gnome Git authors. Our results show a clear improvement over existing algorithms in terms of precision and recall on worst-case input data.},
   author = {Kouters, Erik and Vasilescu, Bogdan and Serebrenik, Alexander and {Van Den Brand}, Mark G J},
   doi = {10.1109/ICSM.2012.6405329},
   pages = {592--595},
   title = {{Who's who in Gnome: Using LSA to merge software repository identities}},
   year = {2012}
}
@article{Maalej2010,
   abstract = {Work descriptions are informal notes taken by developers to summarize work achieved in a particular session. Existing studies indicate that maintaining them is a distracting task, which costs a developer more than 30 min. a day. The goal of this research is to analyze the purposes of work descriptions, and find out if automated tools can assist developers in efficiently creating them. For this, we mine a large dataset of heterogeneous work descriptions from open source and commercial projects. We analyze the semantics of these documents and identify common information entities and granularity levels. Information on performed actions, concerned artifacts, references and new work, shows the work management purpose of work descriptions. Information on problems, rationale and experience shows their knowledge sharing purpose. We discuss how work description information, in particular information used for work management, can be generated by observing developers' interactions. Our findings have many implications for next generation software engineering tools.},
   annote = {They use NLP for automating descriptions of work sessions. They cluster developers into two categories. However they do not approach role discovery but rather phases.},
   author = {Maalej, Walid and Happel, Hans-J{\"{o}}rg},
   doi = {10.1109/MSR.2010.5463344},
   file = {:home/saimir/ownCloud/Mendeley Bibliography/7th IEEE Working Conference on Mining Software Repositories (MSR 2010)/Maalej, Happel - 2010 - 7th IEEE Working Conference on Mining Software Repositories (MSR 2010) - Can Development Work Describe Itself.pdf:pdf},
   isbn = {978-1-4244-6802-7},
   journal = {7th IEEE Work. Conf. Min. Softw. Repos. (MSR 2010)},
   keywords = {Collaborative work,Costs,Information analysis,Planing,Predictive models,Software engineering,Vocabulary,automated tools,development work,heterogeneous work descriptions,knowledge management,knowledge sharing,software development management,software engineering tools,work management purpose},
   pages = {191--200},
   title = {{Can Development Work Describe Itself?}},
   year = {2010}
}
@article{Bhattacharya2014,
   abstract = {Determining contributors' expertise, role, and individual importance are fundamental for assessing their impact on a software project. Currently-used expertise metrics are agnostic to contributor roles and can lead to incorrect characterizations. To address these issues, we operationalize contributor expertise and role. First, we revisit current expertise metrics and show that their use bundles many different aspects, creating ambiguity. Second, we introduce clearly-defined contributor roles, which capture multiple project facets. Third, we propose a graph model, based on contributor collaborations, that captures the hierarchical structure of the contributor community in a concise yet informative way. We demonstrate the model's usefulness in two ways: (a) for identifying the structure and evolution of contributor interactions, (b) for predicting contributor roles. We substantiate our study using two large open-source projects, Fire fox and Eclipse. Our systematic approach clarifies and isolates contributor role and expertise, and sheds light onto the dynamics of contributors within software projects.},
   author = {Bhattacharya, Pamela and Neamtiu, Iulian and Faloutsos, Michalis},
   doi = {10.1109/ICSME.2014.23},
   file = {:home/saimir/ownCloud/Mendeley Bibliography/2014 IEEE International Conference on Software Maintenance and Evolution/Bhattacharya, Neamtiu, Faloutsos - 2014 - 2014 IEEE International Conference on Software Maintenance and Evolution - Determining Develop.pdf:pdf},
   isbn = {978-1-4799-6146-7},
   issn = {1063-6773},
   journal = {2014 IEEE Int. Conf. Softw. Maint. Evol.},
   keywords = {Collaboration,Computer bugs,Control systems,Correlation,Data collection,Developer expertise,Eclipse,Empirical studies,Firefox,Measurement,Software,Software network analysis,clearly-defined contributor roles,contributor collaborations,contributor community,developer expertise,expertise metrics,graph hierarchy-based approach,graph theory,multiple project facets,open-source projects,public domain software,software development management,software metrics,software projects},
   mendeley-groups = {Resource classification from VCS},
   pages = {11--20},
   title = {{Determining Developers' Expertise and Role: A Graph Hierarchy-Based Approach}},
   year = {2014}
}
@article{Poncin2011,
   abstract = {Software developers' activities are in general recorded in software repositories such as version control systems, bug trackers and mail archives. While abundant information is usually present in such repositories, successful information extraction is often challenged by the necessity to simultaneously analyze different repositories and to combine the information obtained. We propose to apply process mining techniques, originally developed for business process analysis, to address this challenge. However, in order for process mining to become applicable, different software repositories should be combined, and “related” software development events should be matched: e.g., mails sent about a file, modifications of the file and bug reports that can be traced back to it. The combination and matching of events has been implemented in FRASR (Framework for Analyzing Software Repositories), augmenting the process mining framework ProM. FRASR has been successfully applied in a series of case studies addressing such aspects of the development process as roles of different developers and the way bug reports are handled.},
   author = {Poncin, W. and Serebrenik, A and van den Brand, M.},
   doi = {10.1109/CSMR.2011.5},
   file = {:home/saimir/ownCloud/Mendeley Bibliography/2011 15th European Conference on Software Maintenance and Reengineering/Poncin, Serebrenik, van den Brand - 2011 - 2011 15th European Conference on Software Maintenance and Reengineering - Process Mining Soft.pdf:pdf;:home/saimir/ownCloud/Mendeley Bibliography/2011 15th European Conference on Software Maintenance and Reengineering/Poncin, Serebrenik, van den Brand - 2011 - 2011 15th European Conference on Software Maintenance and Reengineering - Process Mining S(2).pdf:pdf},
   institution = {IEEE},
   isbn = {978-1-61284-259-2},
   issn = {1534-5351},
   journal = {2011 15th Eur. Conf. Softw. Maint. Reengineering},
   keywords = {process mining,software repositories},
   mendeley-groups = {Resource classification from VCS},
   pages = {5--14},
   title = {{Process Mining Software Repositories}},
   year = {2011}
}
@incollection{verbeek2010xes,
   author = {Verbeek, H M W and Buijs, Joos C A M and {Van Dongen}, Boudewijn F and {Van Der Aalst}, Wil M P},
   booktitle = {Inf. Syst. Evol.},
   pages = {60--75},
   publisher = {Springer},
   title = {{Xes, xesame, and prom 6}},
   year = {2010}
}
@electronic{python2016,
	authors   = "Pythonorg",
	title     = "Python documentation",
	url       = "https://www.python.org/"
}
@electronic{scikitlearn2016,
	authors   = "Scikit-learnorg",
	title     = "Scikit Learn documentation",
	url       = "http://scikit-learn.org/stable/"
}
@electronic{nltk2016,
	authors   = "Scikit-learnorg",
	title     = "Natural language toolkit documentation",
	url       = "http://www.nltk.org/book/ch00.html"
}
@book{minelli2012,
	author = {Michael, Minelli and Michele, Chambers and Ambiga Dhiraj},
	publisher = {"John Wiley \& Sons"},
	title = {{Big data, big analytics: emerging business intelligence and analytic trends for today's businesses}},
	year = {2012}
}


@inproceedings{gousios2008measuring,
   author = {Gousios, Georgios and Kalliamvakou, Eirini and Spinellis, Diomidis},
   booktitle = {Proc. 2008 Int. Work. Conf. Min. Softw. Repos.},
   file = {:home/saimir/ownCloud/Mendeley Bibliography/Proceedings of the 2008 international working conference on Mining software repositories/Gousios, Kalliamvakou, Spinellis - 2008 - Proceedings of the 2008 international working conference on Mining software repositories - Mea.pdf:pdf},
   mendeley-groups = {Resource classification from VCS},
   organization = {ACM},
   pages = {129--132},
   title = {{Measuring developer contribution from software repository data}},
   year = {2008}
}

@article{frank2013role,
   author = {Frank, Mario and Buhman, Joachim M and Basin, David},
   file = {:home/saimir/ownCloud/Mendeley Bibliography/ACM Transactions on Information and System Security (TISSEC)/Frank, Buhman, Basin - 2013 - ACM Transactions on Information and System Security (TISSEC) - Role mining with probabilistic models.pdf:pdf},
   journal = {ACM Trans. Inf. Syst. Secur.},
   mendeley-groups = {Resource classification from VCS},
   number = {4},
   pages = {15},
   publisher = {ACM},
   title = {{Role mining with probabilistic models}},
   volume = {15},
   year = {2013}
}

@article{Mitra2016,
   author = {Mitra, Barsha and Sural, Shamik and Vaidya, Jaideep and Atluri, Vijayalakshmi},
   doi = {10.1145/2871148},
   file = {:home/saimir/ownCloud/Mendeley Bibliography/ACM Computing Surveys/Mitra et al. - 2016 - ACM Computing Surveys - A Survey of Role Mining.pdf:pdf},
   issn = {03600300},
   journal = {ACM Comput. Surv.},
   mendeley-groups = {Resource classification from VCS},
   number = {4},
   pages = {1--37},
   title = {{A Survey of Role Mining}},
   volume = {48},
   year = {2016}
}

@article{Licorish2014,
   abstract = {Context Prior research has established that a few individuals generally dominate project communication and source code changes during software development. Moreover, this pattern has been found to exist irrespective of task assignments at project initiation. Objective While this phenomenon has been noted, prior research has not sought to understand these dominant individuals. Previous work considering the effect of team structures on team performance has found that core communicators are the gatekeepers of their teams' knowledge, and the performance of these members was correlated with their teams' success. Building on this work, we have employed a longitudinal approach to study the way core developers' attitudes, knowledge sharing behaviors and task performance change over the course of their project, based on the analysis of repository data. Method We first used social network analysis (SNA) and standard statistical analysis techniques to identify and select artifacts from ten different software development teams. These procedures were also used to select central practitioners among these teams. We then applied psycholinguistic analysis and directed content analysis (CA) techniques to interpret the content of these practitioners' messages. Finally, we inspected these core developers' activities as recorded in system change logs at various points in time during systems' development. Results Among our findings, we observe that core developers' attitudes and knowledge sharing behaviors were linked to their involvement in actual software development and the demands of their wider project teams. However, core developers appeared to naturally possess high levels of insightful characteristics, which became evident very early during teamwork. Conclusions Project performance would likely benefit from strategies aimed at surrounding core developers with other competent communicators. Core developers should also be supported by a wider team who are willing to ask questions and challenge their ideas. Finally, the availability of adequate communication channels would help with maintaining positive team climate, and this is likely to mitigate the negative effects of distance during distributed developments. {\textcopyright} 2014 Elsevier B.V. All rights reserved.},
   annote = {Special issue: Human Factors in Software Development},
   author = {Licorish, Sherlock A. and MacDonell, Stephen G.},
   doi = {10.1016/j.infsof.2014.02.004},
   file = {:home/saimir/ownCloud/Mendeley Bibliography/Information and Software Technology/Licorish, MacDonell - 2014 - Information and Software Technology - Understanding the attitudes, knowledge sharing behaviors and task per.pdf:pdf},
   isbn = {09505849},
   issn = {09505849},
   journal = {Inf. Softw. Technol.},
   keywords = {Attitudes,Content analysis,Core developers,Knowledge sharing,Psycholinguistics,Task performance},
   number = {12},
   pages = {1578--1596},
   title = {{Understanding the attitudes, knowledge sharing behaviors and task performance of core developers: A longitudinal study}},
   volume = {56},
   year = {2014}
}

@inproceedings{Schonig2015,
   author = {Sch{\"{o}}nig, Stefan and Cabanillas, Cristina and Jablonski, Stefan and Mendling, Jan},
   booktitle = {BPMDS},
   doi = {10.1007/978-3-319-19237-6_3},
   file = {:home/saimir/ownCloud/Mendeley Bibliography/BPMDS/Sch{\"{o}}nig et al. - 2015 - BPMDS - Mining the Organisational Perspective in Agile Business Processes.pdf:pdf},
   pages = {37--52},
   title = {{Mining the Organisational Perspective in Agile Business Processes}},
   year = {2015}
}

@inproceedings{baumgrass2012deriving,
   title={Deriving Process-Related RBAC Models from Process Execution Histories},
   author={Baumgrass, Anne and Schefer-Wenzl, Sigrid and Strembeck, Mark},
   booktitle={Computer Software and Applications Conference Workshops (COMPSACW), 2012 IEEE 36th Annual},
   pages={421--426},
   year={2012},
   organization={IEEE}
}


